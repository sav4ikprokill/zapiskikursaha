const express = require('express');
const router = express.Router();
const Note = require('../models/Note');

// üì• –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏
router.get('/', async (req, res) => {
    try {
        const notes = await Note.find();
        res.json(notes);
    } catch (err) {
        res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–º–µ—Ç–æ–∫' });
    }
});

// ‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–º–µ—Ç–∫—É
router.post('/', async (req, res) => {
    const { title, content, tags } = req.body;

    const note = new Note({
        title,
        content,
        tags
    });

    try {
        const newNote = await note.save();
        res.status(201).json(newNote);
    } catch (err) {
        res.status(400).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–º–µ—Ç–∫–∏' });
    }
});

// üîç –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–≥—É
router.get('/search', async (req, res) => {
    const { tag } = req.query;

    try {
        const filteredNotes = await Note.find({ tags: tag });
        res.json(filteredNotes);
    } catch (err) {
        res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–º–µ—Ç–æ–∫' });
    }
});

module.exports = router;
